%% УРОВНИ ЭНЕРГИИ
clear 
%% Исходные данные 
n = 200;                   % количество точек 
  
x = linspace(-4, 4, n)'; 
h = (x(2)-x(1));  
Dsquared = (diag(ones(1,n-1),1) - 2*diag(ones(1,n)) + diag(ones(1,n-1), -1))/h^2; %вторая производная 
V = x.^2;              % Квадратичный потенциал 
  
%% 
H = -Dsquared + diag(V);               % Гамильтониан 
[Vect,Val] = eig(H);   % собственные векторы и собственные значения 
Val=diag(Val); 
  
%% Построение графика 
figure1 = figure; 
axes1 = axes('Parent',figure1); 
hold 
for i=1:7 
 plot([-(sqrt(Val(i))) (sqrt(Val(i)))],[Val(i) Val(i)], LineWidth=2)
 text((sqrt(Val(i))) +  0.2, Val(i), num2str(round(Val(i))), FontSize=18)
end 
plot(x, V,'LineWidth',2,'Color',[1 0 0]); 
ylim(axes1,[0 15]); 
ylabel(axes1, "E", FontSize=18)
xlabel(axes1, "x", FontSize=18)

%% ЭВОЛЮЦИЯ ВОЛНОВОГО ПАКЕТА
clear 
%% Исходные данные 
  
n = 200;       %количество точек (зависит от производительности PC)  
  
% волновой пакет 
p = 4; 
d = 1; 
x = linspace(-10,10,n); 
offset = 0; 
wave = ( ( exp(1i*p*(x-offset)) ).*( exp(-((x-offset).^2)/(2*d^2)) ) )./((pi*d^2)^1/4 ); 
wave = wave'; 
  
%% 
x = linspace(-4, 4, n)'; 
h = (x(2)-x(1));  
Dsquared = (diag(ones(1,n-1),1) - 2*diag(ones(1,n)) + diag(ones(1,n-1), -1))/h^2; %вторая производная 
V = 100*x.^2;   % Квадратичный потенциал 
  
%% 
H = -Dsquared + diag(V);       % Гамильтониан 
%% 
 
t = 0.01;  %начальный момент времени 
figure1 = figure; 
axes1 = axes('Parent',figure1); 
 
for i = 1:100  %цикл вывода результатов 
 
%% 
U = expm(-1i*t*H);      % Оператор эволюции во времени 
%% 
 
wave1 = U*wave; % применение оператора эволюции к волновому пакету 
%% 
 
t = t+0.01; %следующий момент времени (зависит от производительности) 
% plot(x, real(wave1),'Color',[1 0 0])  % действительная часть волновой функции 
plot(x, abs(wave1).^2,'Color',[1 0 0])  % вероятность 
hold 
plot(x, ((V+1.5)/100)-1.5) 
ylim(axes1,[-1.5 3]); 
hold  
pause(0.2);  % зависит от производительности компьютера 
end 

%% ВОЛНОВАЯ ФУНКЦИЯ
clear 
%% Исходные данные 
n = 200;            %количество точек (зависит от производительности PC)  
x = linspace(-4, 4, n)'; 
h = (x(2)-x(1));  
Dsquared = (diag(ones(1,n-1),1) - 2*diag(ones(1,n)) + diag(ones(1,n-1), -1))/h^2; %вторая производная 
V = 100*x.^2-1.5;              % Квадратичный потенциал 
  
%% 
H = -Dsquared + diag(V);               % Гамильтониан 
 
%% Собственные векторы и собственные значения 
[Vect, Val] = eig(H); 
%% 
 
t = 0.01;  
figure1 = figure; 
axes1 = axes('Parent',figure1); 
 
for i = 1:100 %цикл вывода результатов 
 
%% 
U = expm(-1i*t*H);      % Оператор эволюции во времени 
%% 
 
wave = U*Vect(:,3);   % применение оператора эволюции к третьему собственному вектору  
 
%% 